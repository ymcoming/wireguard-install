Debain 系统：

# 先安装linux-headers

apt update

apt install linux-headers-$(uname -r) -y

# 安装WireGuard

echo "deb http://deb.debian.org/debian/ unstable main" > /etc/apt/sources.list.d/unstable.list

printf 'Package: *\nPin: release a=unstable\nPin-Priority: 150\n' > /etc/apt/preferences.d/limit-unstable

apt update

apt install wireguard-dkms wireguard-tools resolvconf -y


Ubuntu系统：
add-apt-repository ppa:wireguard/wireguard
apt-get update
apt-get install wireguard-dkms wireguard-tools resolvconf -y



# 开启ipv4流量转发
# Uncomment the next line to enable packet forwarding for IPv4

echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf

# Uncomment the next line to enable packet forwarding for IPv6

echo "net.ipv6.ip_forward = 1" >> /etc/sysctl.conf

然后
reboot or

sysctl –p /etc/sysctl.conf

sysctl -p

# 创建并进入WireGuard文件夹

mkdir -p /etc/wireguard && chmod 0777 /etc/wireguard

cd /etc/wireguard

umask 077

# 生成服务器和客户端密钥对

wg genkey | tee server_privatekey | wg pubkey > server_publickey

wg genkey | tee client_privatekey | wg pubkey > client_publickey

输入ifconfig查看主网卡名称，记住名字，若不是eth0

生成服务器配置文件/etc/wireguard/wg0.conf:

# 重要！如果名字不是eth0, 以下PostUp和PostDown处里面的eth0替换成自己服务器显示的名字
# ListenPort为端口号，可以自己设置想使用的数字
# 以下内容一次性粘贴执行，不要分行执行

echo "
[Interface]
  PrivateKey = $(cat server_privatekey)
    Address = 10.0.0.1/24
    PostUp   = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -A FORWARD -o wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
    PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -D FORWARD -o wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE
    ListenPort = 50814
    DNS = 8.8.8.8
    MTU = 1420
[Peer]
  PublicKey = $(cat client_publickey)
    AllowedIPs = 10.0.0.2/32 " > wg0.conf



设置开机自启：

systemctl enable wg-quick@wg0

生成客户端配置文件/etc/wireguard/client.conf:

# Endpoint是自己服务器ip和服务端配置文件中设置的端口号，自己在本地编辑好再粘贴到SSH里
# 以下内容一次性粘贴执行，不要分行执行

echo "
[Interface]
  PrivateKey = $(cat client_privatekey)
    Address = 10.0.0.2/24
    DNS = 8.8.8.8
    MTU = 1420
[Peer]
  PublicKey = $(cat server_publickey)
    Endpoint = 1.2.3.4:50814
    AllowedIPs = 0.0.0.0/0, ::0/0
    PersistentKeepalive = 25 " > client.conf


# 启动WireGuard
wg-quick up wg0

# 停止WireGuard
wg-quick down wg0

# 查看WireGuard运行状态
wg


使用二维码导出配置文件

apt install qrencode -y

qrencode -t ansiutf8 < /etc/wireguard/client.conf


添加新客户端的方法：

# 停止WireGuard
wg-quick down wg0

# 生成新的客户端密钥对
wg genkey | tee client0_privatekey | wg pubkey > client0_publickey


# 在服务端配置文件中加入新的客户端公钥
# AllowedIPs重新定义一段
# 一次性复制粘贴，不要分行执行
echo "
[Peer]
  PublicKey = $(cat client0_publickey)
  AllowedIPs = 10.0.0.3/32" >> wg0.conf


# 新建一个客户端文件，使用新客户端密钥的私钥
# Address与上面的AllowedIPs保持一致
# Endpoint和之前的一样，为服务器ip和设置好的ListenPort
# 一次性复制粘贴，不要分行执行
echo "
[Interface]
  PrivateKey = $(cat client0_privatekey)
  Address = 10.0.0.3/24
  DNS = 8.8.8.8
  MTU = 1420

[Peer]
  PublicKey = $(cat server_publickey)
  Endpoint = 1.2.3.4:50814
  AllowedIPs = 0.0.0.0/0, ::0/0
  PersistentKeepalive = 25 " > client0.conf


# 已经成功创建后，启动WireGuard
wg-quick up wg0

# 导出客户端配置文件方式依旧可以采用上面介绍的两种方法，例如此客户端文件生成二维码就应该为
qrencode -t ansiutf8 < /etc/wireguard/client0.conf





